---
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: ClusterRoleBinding
metadata:
  name: filebeat
subjects:
- kind: ServiceAccount
  name: filebeat
  namespace: default
roleRef:
  kind: ClusterRole
  name: filebeat
  apiGroup: rbac.authorization.k8s.io
---
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: ClusterRole
metadata:
  name: filebeat
  labels:
    k8s-app: filebeat
rules:
- apiGroups: [""] # "" indicates the core API group
  resources:
  - namespaces
  - pods
  verbs:
  - get
  - watch
  - list
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: filebeat
  namespace: default
  labels:
    k8s-app: filebeat
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: filebeat-config
  namespace: default
  labels:
    k8s-app: filebeat
    kubernetes.io/cluster-service: "true"
data:
  filebeat.yml: |-
    filebeat.config:
      prospectors:
        # Mounted `filebeat-prospectors` configmap:
        path: ${path.config}/prospectors.d/*.yml
        # Reload prospectors configs as they change:
        reload.enabled: false
      modules:
        path: ${path.config}/modules.d/*.yml
        # Reload module configs as they change:
        reload.enabled: false

    processors:
      - add_cloud_metadata:

    cloud.id: ${ELASTIC_CLOUD_ID}
    cloud.auth: ${ELASTIC_CLOUD_AUTH}

    setup.template.name: "${ELASTICSEARCH_INDEX}"
    setup.template.pattern: "${ELASTICSEARCH_INDEX}-*"
    output.elasticsearch:
      hosts: ["${ELASTICSEARCH_HOST:elasticsearch}:${ELASTICSEARCH_PORT:9200}"]
      #username: ${ELASTICSEARCH_USERNAME}
      #password: ${ELASTICSEARCH_PASSWORD}
      index: '${ELASTICSEARCH_INDEX}-%{+YYYY.MM.dd}'
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: filebeat-prospectors
  labels:
    k8s-app: filebeat
    kubernetes.io/cluster-service: "true"
data:
  nginx-access.yml: |-
    - type: log
      enabled: true
      paths:
        - /var/log/nginx/access.log
      processors:
        - add_kubernetes_metadata:
            in_cluster: true
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: filebeat-nginx
  namespace: default
spec:
  replicas: 2
  template:
    metadata:
      labels:
        k8s-app: filebeat-nginx
    spec:
      serviceAccountName: filebeat
      containers:
      - image: docker.elastic.co/beats/filebeat:6.3.2
        args: [
          "-c", "/etc/filebeat/filebeat.yml",
          "-e",
        ]
        name: filebeat
        env:
        - name: ELASTICSEARCH_INDEX
          value: 'filebeat-nginx-access'
        - name: ELASTICSEARCH_HOST
          value: elasticsearch
        - name: ELASTICSEARCH_PORT
          value: "9200"
        - name: ELASTIC_CLOUD_ID
          value:
        - name: ELASTIC_CLOUD_AUTH
          value:
        volumeMounts:
        - name: config
          mountPath: /etc/filebeat/filebeat.yml
          readOnly: true
          subPath: filebeat.yml
        - name: prospectors
          mountPath: /usr/share/filebeat/prospectors.d
        - name: data
          mountPath: /usr/share/filebeat/data
        - name: nginx-logs
          mountPath: /var/log/nginx
      - image: nginx:1.10.3
        name : nginx
        ports:
        - containerPort: 80
        volumeMounts:
        - name: nginx-logs
          mountPath: /var/log/nginx
      volumes:
      - name: config
        configMap:
          defaultMode: 0644
          name: filebeat-config
      - name: prospectors
        configMap:
          defaultMode: 0644
          name: filebeat-prospectors
      - name: data
        emptyDir: {}
      - name: nginx-logs
        emptyDir: {}
---
apiVersion: v1
kind: Service
metadata:
  name: filebeat-nginx
  labels:
    app: filebeat-nginx
spec:
  ports:
  - port: 80
    protocol: TCP
    name: http
  selector:
    run: filebeat-nginx
